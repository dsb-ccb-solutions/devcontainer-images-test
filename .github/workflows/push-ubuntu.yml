name: Build and Push ubuntu images

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  create:
    tags:
      - "v*.*.*"
  workflow_dispatch:
    inputs:
      push_image:
        description: "Push image after build?"
        required: false
        type: boolean
        default: false

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ubuntu

jobs:
  build-and-push:
    name: Build and push images
    strategy:
      fail-fast: true
      matrix:
        build_target:
          - { name: "base", image_suffix: "" }
          - { name: "ci", image_suffix: "-ci" }
          # - { name: "coder", image_suffix: "-coder" }
    runs-on: ubuntu-latest
    environment: build
    permissions:
      contents: read
      packages: write # Erforderlich, um in das GitHub Container Registry zu schreiben

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}/${{ env.IMAGE_NAME }}${{ matrix.build_target.image_suffix }}
          # tags for image
          # - version + "latest" when worflow triggered via create tag event
          # - 'edge' for the last commit in the active branch
          # - (short) sha commit always
          tags: |
            type=semver,pattern={{version}},enable=${{ github.event_name == 'create' && github.ref_type == 'tag' }}
            type=raw,value=latest,enable=${{ github.event_name == 'create' && github.ref_type == 'tag' }}
            type=edge
            type=sha

      - name: Build and push images
        uses: docker/build-push-action@v6
        with:
          context: ./src/ubuntu
          platforms: linux/amd64
          target: ${{ matrix.build_target.name }}
          # platforms: linux/amd64,linux/arm64 # Hier werden die Zielplattformen angegeben
          push: ${{ github.event_name == 'push' || (github.event_name == 'create' && github.ref_type == 'tag') || github.event.inputs.push_image == 'true'}}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          secrets: |
            mise_github_token=${{ secrets.MISE_GITHUB_TOKEN }}
